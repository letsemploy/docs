{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About oJobPub","text":"<p>oJobPub is an initiative with the goal, to create a simlified, optimized and efficient process to publish and collect open job positions and vacancies.</p>"},{"location":"#benfits","title":"Benfits","text":"<ul> <li> Efficient: Employers manage open job positions in one place.</li> <li> Optimized: Search engines know where to look and get structured data.</li> <li> Reliable: Candidates find current job openings more reliable.</li> <li> In Control: Employers keep control of their data and application process.</li> <li> No additional costs beyond what employers already payed for domain and web hosting.</li> </ul>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#why-a-new-format","title":"Why a new format?","text":"<p>There are already existing formats for job ads, the most promising of which job-posting JSON Schema seems also be supported by Google <sup>1</sup>. </p> <p>However, a bot must crawl the entire website to find the job ads and it is bloated with data. For us, this format seems to be most useful for larger search bots such as Google. oJobPub does not restrict you from using this format on your job description website as well; it complements it.</p> <p>Another schema that is very similar to ours is json-job. It is somewhat more comprehensive, but the project has not been active for over 10 years. It does not define where this data should be placed on your website. We could have used it, but we didn't want to wake sleeping daemons.</p>"},{"location":"faq/#how-can-i-help","title":"How can I help","text":"<p>TBD</p>"},{"location":"faq/#how-can-i-join","title":"How can I join","text":"<p>TBD</p> <ol> <li> <p>Google documentation about job-posting \u21a9</p> </li> </ol>"},{"location":"project/","title":"About the Project","text":"<p>To establish a JSON schema as a standard format for publishing vacancies we follow the following strategy:</p>"},{"location":"project/#1-define-a-governance-model","title":"1. Define a Governance Model","text":"<p>First, we need to decide who will be in charge of maintaining the standard. This could be a non-profit organization, a consortium of industry players, or an open-source community. A clear governance model ensures the standard evolves transparently and in a way that benefits everyone.</p> <ul> <li>Create a Core Team: Assemble a small group of stakeholders, including recruiters, developers, and job board operators, to guide the initial development.</li> <li>Establish a Decision-Making Process: Determine how changes to the schema will be proposed, discussed, and approved. This could be a formal voting process or a consensus-based approach.</li> </ul>"},{"location":"project/#2-build-a-community","title":"2. Build a Community","text":"<p>A standard is only useful if it's widely adopted. This requires active engagement with the community.</p> <ul> <li>Publish the Schema: Make the schema publicly available on a platform like GitHub. Use a versioning system (e.g., <code>v1</code>, <code>v2</code>) to manage changes.</li> <li>Create Documentation: Write clear and comprehensive documentation. Explain what each field is for, provide examples, and offer guidance on how to implement the schema.</li> <li>Launch a Website or Forum: Create a dedicated space for discussion, bug reports, and feature requests. This is where you'll gather feedback and build momentum.</li> <li>Engage with Key Stakeholders: Reach out to stakeholders. Show them the benefits of the standard and encourage them to participate.</li> </ul>"},{"location":"project/#3-formalize-the-standard","title":"3. Formalize the Standard","text":"<p>Once the schema is mature and has received sufficient community feedback, you can pursue formal recognition.</p> <ul> <li>Write a Specification: Turn the schema and its documentation into a formal specification document. This should include a detailed description of every field, data types, and any business rules.</li> </ul>"},{"location":"project/#4-promote-adoption-and-provide-tools","title":"4. Promote Adoption and Provide Tools","text":"<p>Promotion is key to making the standard a success.</p> <ul> <li>Develop Client Libraries: Create official libraries in popular programming languages (e.g., Python, JavaScript) to make it easy for developers to use the schema.</li> <li>Build Validation Tools: Offer a free online tool where anyone can paste their JSON and validate it against the schema. This helps catch errors and encourages correct usage.</li> <li>Showcase Success Stories: As companies start to adopt the standard, highlight their success. This provides social proof and demonstrates the real-world value of the format.</li> <li>Maintain and Iterate: Continue to solicit feedback and release new versions of the schema as the industry evolves.</li> </ul>"},{"location":"solution/","title":"Our Solution","text":""},{"location":"solution/#use-your-own-website","title":"Use your own Website","text":"<p>So, we ask ourselves:</p> <p>Why do we even need to post job openings on commercial portals?!</p> <p>Actually, we don't! </p> <p>The World Wide Web is a vast, distributed database where websites are stored all over the globe, not on a single, centralized platform. </p>"},{"location":"solution/#structured-data","title":"Structured Data","text":"<p>Because there's no standard format (yet) for published job data on websites, job information can vary widely \u2014 from a simple list of jobs to a searchable input field to query jobs to an individual pages for each opening. </p> <p>This lack of consistency and structure makes it difficult for search engines to accurately recognize the context as job openings.</p> <p>While we still want to keep our content on our own website rather than on commercial platforms that sell our data, the challenge is making that content discoverable.</p> <p>A simplistic, minimalistic, structured data file containing meta information about your job opening and a link to your detailed job page should be good enough!</p>"},{"location":"solution/#predefined-path","title":"Predefined Path","text":"<p>How can this data be found?</p> <p>By placing a metadata file at a specific, predetermined path, we can ensure that search engines looking for job openings know exactly where to find the data. </p> <p>This means they are aware of the data's context, allowing them to optimize how often they revisit to update their index.</p> <p>As a result, job openings can be indexed by multiple search engines without further efforts and without any additional cost.</p>"},{"location":"solution/#keep-the-control","title":"Keep the Control","text":"<p>Why use metadata instead of full job descriptions?</p> <p>The metadata you provide will be stored as an index by search engines, we can't control how long they keep that data.</p> <p>That is why only as much information as necessary is provided. This strategy ensures that there is just enough information to pique a candidate's interest and send them to the employer's website. </p> <p>This is crucial because employers keep control of the application process.</p>"},{"location":"why/","title":"What is the Issue?","text":""},{"location":"why/#expensive","title":"Expensive","text":"<p>How much will it cost? Can my company afford that?</p> <p>Publishing and finding jobs is a huge market. </p> <p>Nowadays there are hundrets or thousands of job portals world wide.</p> Small selection of well-known job portals <p>Just to name a few: Indeed, LinkedIn, Monster, Glassdoor, CareerBuilder, ZipRecruiter, Jobrapido, Simply Hired, Dice, Upwork, Fiverr, Freelancer, FlexJobs, Adzuna, StepStone, XING, Stellenanzeigen.de, Jobware, Meinestadt.de, Absolventa, Kimeta, JobNinja, Jobs.ch, JobScout24.ch, JobUp.ch, Karriere.at, a.s.o</p> <p>Getting information about how much the market is or their profits are difficult but we got an example from Switzerland, JobCloud Inc., the leading job portal in Switzerland with a press release in 2019:</p> <p>Quote</p> <p>...2018 was a particularly successful year \u2013 JobCloud recorded record sales of CHF 115 million (USD 117 million). (Source)</p> <p>Employers in Switzerland paid more than USD 100 millions per year just to publish their job openings to one single job portal.</p> <p>Needless to say, job portals typically charge employers regardless of whether they fill the position or not. </p>"},{"location":"why/#inefficient","title":"Inefficient","text":""},{"location":"why/#employers","title":"Employers","text":"<p>On which job portals should employers publish job openings?</p> <p>Employers must decide on which of the many, many job portals to publish our job openings. </p> <p>It is not obvious to find the criteria to decide on which portal they have the best chances to find a candidate.</p> <p>Publishing a job on multiple portals often means to copy/paste data and more work to publish and manage.</p> <p>As an employer, we want to publish the job on one location and spread the info.</p>"},{"location":"why/#job-seekers","title":"Job Seekers","text":"<p>Where to look for a new job? On which job portals? Or should I search the web?</p> <p>If an employer can't afford to pay for a job posting, they might only list the vacancy somewhere on their own website. Further, all Google/Bing indexed job openings are often outdated because they do or can not distingues normal website content from job openings.</p> <p>We think, our solution might be the missing piece to make it work.</p>"},{"location":"how/","title":"How to publish Job Openings","text":""},{"location":"how/#1-website","title":"1. Website","text":"<p>You need your own website: e.g. www.example.com, on which you publish your job openings as usual. This can be a Wordpress, another CMS, plain HTML or any other way.</p>"},{"location":"how/#2-create-a-ojobpubjson","title":"2. Create a ojobpub.json","text":"<p>Create file <code>/.well-known/ojobpub.json</code> (all lower case!) in a specific JSON format containing structured meta information about your job openings and link to the full job description on your website.</p> <p>File or Application?</p> <p>While we have used a static ojobpub.json file to demonstrate the simplest way to provide the data, this endpoint is not limited to a static file. It could just as easily be served by a dynamic application or script.</p>"},{"location":"how/#3-validate","title":"3. Validate","text":"<p>To validate the JSON data format, we provide a oJobPub JSON schema and an app validator.ojobpub.org to help validate the data file.</p>"},{"location":"how/#4-lets-index","title":"4. Let's index","text":"<p>Go to search.ojobpub.org, enter your domain and let us index your jobs! </p> <p>This helps us to see, how things are growing. Once this format is known and etablished, this step may become obsolete (hopefully!).</p>"},{"location":"how/#5-spread-the-word","title":"5. Spread the Word","text":"<p>Let others know you are publishing job openings using oJobPub by adding a link on your job site: <pre><code>&lt;a href=\"https://ojobpub.org\"&gt;Supports oJobPub.org&lt;/a&gt;\n</code></pre></p>"},{"location":"how/ojobpub-format/","title":"oJobPub JSON Format","text":"<p>oJobPub is meant to be minimalistic, mainly containing meta infos about the job and a short job description, a summary. It is not meant to have all possible data of a job posting: e.g. the process of application is and will not be covered.</p> <p>Before we go to oJobPub JSON, let's clearify two terms:</p> <ul> <li>JSON</li> <li>JSON Schema</li> </ul>"},{"location":"how/ojobpub-format/#what-is-json","title":"What is JSON","text":"<p>JSON (JavaScript Object Notation) is an open, lightweight, text-based data structure format used to store and interchange data. Primarly for machines to write and read while still writable and readable by humans. </p>"},{"location":"how/ojobpub-format/#what-is-a-json-schema","title":"What is a JSON Schema","text":"<p>JSON Schema is an IETF standard providing a format for what JSON data is required for a given application and how to interact with it: Applying such standards for a JSON document enforces consistency and data validity.</p>"},{"location":"how/ojobpub-format/#ojobpub-json","title":"oJobPub JSON","text":"<p>A possible output could look like the sample below, however, some of the (blue) keys (e.g. <code>workload</code> or <code>jobDescription</code>) are optional while others are required (e.g. <code>jobTitle</code>). This is why we also provide a oJobPub JSON Schema and an online validator tool validator.ojobpub.org to allow verification of the data structure.</p> <p>Note</p> <p>JSON might look complicated if you're not familiar with it, but don't worry \u2014 you won't have to write it by hand. Once this format is finalized, we'll provide tools to help you generate and validate the structure.</p> <p>In the following sample, we see first an <code>employer</code> object containing infos about the company: name, location, industry, (main website) url. </p> <p>Later we find a list of open job positions, called vacancies. In the sample, we only see one vacancy but there is currently no limit how many vacancy entries you add. </p> <pre><code>    \"employer\": {\n        \"name\": \"Acme Corp\",\n        \"location\": {\n            \"city\": \"New York\",\n            \"country\": \"US\"\n        },\n        \"industry\": \"Software\",\n        \"url\": \"https://example.com\"\n    },\n    \"vacancies\": [\n        {\n            \"datePublished\": \"2025-08-30\",\n            \"jobCategory\": \"Engineering\",\n            \"jobTitle\": \"Software Engineer\",\n            \"jobRef\": \"SE-2023-001\",\n            \"applyBefore\": \"2026-12-31\",\n            \"language\": \"en\",\n            \"jobDescription\": \"Develop and maintain software applications.\",\n            \"jobType\": \"permanent\",\n            \"workType\": \"hybrid\",\n            \"experienceLevel\": \"mid\",\n            \"workLoad\": {\n                \"minPercentage\": 80,\n                \"maxPercentage\": 100\n            },\n            \"tags\": [\"python\", \"flask\", \"backend\"],\n            \"location\": {\n                \"city\": \"Amsterdam\",\n                \"country\": \"NL\"\n            },\n            \"jobUrl\": \"https://example.com/job/1\"\n        }\n    ]\n}\n</code></pre> <ol> <li>The <code>employer</code> json object with minimal information about the employer.</li> <li>The list of <code>vacancies</code> objects with meta information about the job openings.</li> </ol> <p>Tip</p> <p>While not all properties are required for a valid file, we highly recommend you fill out as much metadata as possible.</p>"}]}