{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Let's Employ","text":"<p>\"Let's Employ\" is an initiative with the following goals:</p> <p>Create a free, simple and convenient process to publish and find your vacancies on your own website. Make it simple and efficient to collect the data for everyone with help of a standardised job meta data format ojobpub.json.</p>"},{"location":"#benfits","title":"Benfits","text":"<ul> <li> Simple: Employers manage open job positions on their websites.</li> <li> Efficient: Search engines collect structured data from a known path on employers' web servers.</li> <li> Keep Control: Employers keep control of their data and application process.</li> <li> Free: No additional costs beyond what employers already pay for your domain and web hosting.</li> </ul>"},{"location":"#modus-operandi","title":"Modus Operandi","text":""},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-to-find-all-domains-that-using-ojobpub","title":"How to find all domains that using ojobpub?","text":"<p>We will provide a free download service to get all the domains publishing vacancies as ojobpub.json.</p>"},{"location":"faq/#how-to-search-for-jobs-published-by-ojobpub-atm","title":"How to search for jobs published by ojobpub atm?","text":"<p>We are currently working on free web service which allows to create an initial index of published jobs with statistics. This service will provide also a free service to search for vacancies.</p>"},{"location":"faq/#i-have-an-idea-and-want-to-start-a-discussion-where-should-i-place-it","title":"I have an idea and want to start a discussion, where should I place it?","text":"<p>We use GitHub discussions for ideas. feature requests and general discussions.</p>"},{"location":"faq/#where-to-place-e-mail-address-in-ojobpubjson-for-candidates-to-apply","title":"Where to place e-mail address in ojobpub.json for candidates to apply?","text":"<p>We don't recommend to add anything about job application into ojobpub.json. Because these meta data will be crawled and distributed.</p> <p>We recommend to add instructions for the application process on your website in the job details page instead which linked by the <code>url</code> in ojobpub.json.</p>"},{"location":"faq/#we-dont-have-any-vacancies-atm-should-we-add-a-ojobpubjson","title":"We don't have any vacancies atm, should we add a ojobpub.json?","text":"<p>Yes! Any company should add a ojobpub.json on their website, even without any vacancies.</p>"},{"location":"faq/#does-it-cost-anything","title":"Does it cost anything?","text":"<p>Beside what you already pay for a domain and web hosting, there are no additional costs!</p>"},{"location":"faq/#why-a-new-format","title":"Why a new format?","text":"<p>There are already existing formats for job ads, the most promising of which job-posting JSON Schema seems also be supported by Google <sup>1</sup>.</p> <p>However, a bot must crawl the entire website to find the job ads and it is bloated with data. For us, this format seems to be most useful for larger search bots such as Google. oJobPub does not restrict you from using this format on your job description website as well; it complements it.</p> <p>There is also another schema: json-job. It is somewhat more comprehensive and the project has not been active for over 10 years. It does not define where this data should be placed on your website. We could have used it, but we didn't want to wake sleeping daemons.</p> <ol> <li> <p>Google documentation about job-posting \u21a9</p> </li> </ol>"},{"location":"project/","title":"About the Project","text":"<p>To establish a JSON schema as a standard format for publishing vacancies we follow the following strategy:</p>"},{"location":"project/#1-define-a-governance-model","title":"1. Define a Governance Model","text":"<p>First, we need to decide who will be in charge of maintaining the standard. This could be a non-profit organization, a consortium of industry players, or an open-source community. A clear governance model ensures the standard evolves transparently and in a way that benefits everyone.</p> <ul> <li> Create a Core Team: Assemble a small group of stakeholders, including recruiters, developers, and job board operators, to guide the initial development.</li> <li> Establish a Decision-Making Process: Determine how changes to the schema will be proposed, discussed, and approved. This could be a formal voting process or a consensus-based approach.</li> </ul>"},{"location":"project/#2-build-a-community","title":"2. Build a Community","text":"<p>A standard is only useful if it's widely adopted. This requires active engagement with the community.</p> <ul> <li> Publish the Schema: Make the schema publicly available on a platform like GitHub. Use a versioning system (e.g., <code>v1</code>, <code>v2</code>) to manage changes.</li> <li> Create Documentation: Write clear and comprehensive documentation. Explain what each field is for, provide examples, and offer guidance on how to implement the schema.</li> <li> Launch a Website or Forum: Create a dedicated space for discussion, bug reports, and feature requests. This is where you'll gather feedback and build momentum.</li> <li> Engage with Key Stakeholders: Reach out to stakeholders. Show them the benefits of the standard and encourage them to participate.</li> </ul>"},{"location":"project/#3-formalize-the-standard","title":"3. Formalize the Standard","text":"<p>Once the schema is mature and has received sufficient community feedback, you can pursue formal recognition.</p> <ul> <li> Write a Specification: Turn the schema and its documentation into a formal specification document. This should include a detailed description of every field, data types, and any business rules.</li> </ul>"},{"location":"project/#4-promote-adoption-and-provide-tools","title":"4. Promote Adoption and Provide Tools","text":"<p>Promotion is key to making the standard a success.</p> <ul> <li> Develop Client Libraries: Create official libraries in popular programming languages (e.g., Python, JavaScript) to make it easy for developers to use the schema.</li> <li> Build Validation Tools: Offer a free online tool where anyone can paste their JSON and validate it against the schema. This helps catch errors and encourages correct usage.</li> <li> Showcase Success Stories: As companies start to adopt the standard, highlight their success. This provides social proof and demonstrates the real-world value of the format.</li> <li> Maintain and Iterate: Continue to solicit feedback and release new versions of the schema as the industry evolves.</li> </ul>"},{"location":"implementation/ojobpub-format/","title":"About oJobPub.json","text":"<p>oJobPub is our minimalistic data file in JSON (Wikipedia), containing meta infos about your job openings.</p> <p>It must be placed in a defined path in your web hosting: <code>&lt;yourdomain.tld&gt;/.well-known/ojobpub.json</code>.</p>"},{"location":"implementation/ojobpub-format/#ojobpub-format","title":"oJobPub Format","text":"<p>In the following sample, we see first an <code>employer</code> object containing infos about the company: name, location, industry, (main website) url.</p> <p>Later we find a list of jobs. There is only one job in the sample but there is currently no limit how many job entries you add.</p> <pre><code>{\n    \"version\": \"1.0\",\n    \"lastUpdated\": \"2025-09-13T12:00:00Z\",\n    \"employer\": {\n        \"name\": \"Acme Corp\",\n        \"location\": {\n            \"city\": \"New York\",\n            \"country\": \"US\"\n        },\n        \"industry\": \"Software\",\n        \"url\": \"https://example.com\"\n    },\n    \"jobs\": [\n        {\n            \"publishedAt\": \"2025-08-30\",\n            \"category\": \"Engineering\",\n            \"title\": \"Software Engineer\",\n            \"referenceId\": \"SE-2023-001\",\n            \"applyBefore\": \"2026-12-31\",\n            \"language\": \"en\",\n            \"description\": \"Develop and maintain software applications.\",\n            \"jobType\": \"permanent\",\n            \"workType\": \"hybrid\",\n            \"experienceLevel\": \"mid\",\n            \"workLoad\": {\n                \"minPercentage\": 80,\n                \"maxPercentage\": 100\n            },\n            \"tags\": [\"python\", \"flask\", \"backend\"],\n            \"locations\":\n            [\n                {\n                    \"city\": \"New York\",\n                    \"country\": \"US\"\n                },\n                {\n                    \"city\": \"San Francisco\",\n                    \"country\": \"US\"\n                }\n            ],\n            \"salary\": {\n                \"minAmount\": 70000,\n                \"maxAmount\": 120000,\n                \"currency\": \"USD\",\n                \"period\": \"yearly\"\n            },\n            \"url\": \"https://example.com/job/1\"\n        }\n    ]\n}\n</code></pre> <ol> <li>The <code>employer</code> json object with minimal information about the employer.</li> <li>The list of <code>jobs</code> objects with meta information about the job openings.</li> </ol> <p>Note</p> <p>JSON might look complicated if you're not familiar with it, but don't worry \u2014 you won't have to write it by hand. Once this format is finalized, we'll provide tools to help you generate and validate the structure.</p> <p>Some of the (blue) keys (e.g. <code>workload</code> or <code>description</code>) are optional while others are required (e.g. <code>title</code>).</p> <p>This is why we provide a oJobPub JSON Schema (also see GitHub) and an online validator tool validator.letsemploy.org to allow verification of the data structure.</p> <p>Tip</p> <p>While not all properties are required for a valid file, we highly recommend you fill out as much metadata as possible.</p>"},{"location":"implementation/ojobpub-schema/","title":"oJobPub - Open Job Publishing Initiative","text":"<p>Meta data format to publish open jobs on your website.</p>"},{"location":"implementation/ojobpub-schema/#type-object","title":"Type: <code>object</code>","text":"<p>\u26a0\ufe0f Additional properties are not allowed.</p> Property Type Required Possible values Deprecated Default Description Examples version <code>const</code> \u2705 <code>1.0</code> Version of the oJobPub schema lastUpdated <code>string</code> \u2705 Format: <code>date-time</code> Date when the oJobPub feed was last updated employer <code>object</code> \u2705 object Information about the employer offering the job employer.name <code>string</code> \u2705 Length: <code>1 &lt;= string &lt;= 255</code> Employer's name employer.location <code>object</code> \u2705 object Location information employer.location.city <code>string</code> string City e.g. San Francisco employer.location.country <code>string</code> Length: <code>2 &lt;= string &lt;= 2</code> Country code as ISO 3166-1 alpha-2, e.g. US, DE, CH. Also see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 employer.industry <code>string</code> Length: <code>1 &lt;= string &lt;= 255</code> Industry of the employer, e.g. Software, Finance, Healthcare employer.url <code>string</code> Format: <code>uri</code> Employer's main website URL, e.g. https://www.example.com jobs <code>array</code> \u2705 object List of job openings offered by the employer jobs[].language <code>string</code> \u2705 Length: <code>2 &lt;= string &lt;= 2</code> Language of the job description as ISO 639-1:2002. See https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes jobs[].publishedAt <code>string</code> \u2705 Format: <code>date</code> Date when the job was first published jobs[].startDate <code>string</code> Format: <code>date</code> Date when the job starts jobs[].endDate <code>string</code> Format: <code>date</code> Date when the job ends jobs[].applyBefore <code>string</code> Format: <code>date</code> Date until the job is valid jobs[].category <code>string</code> Length: <code>string &lt;= 255</code> Category of the job: e.g. Engineering, Marketing, Salesq jobs[].referenceId <code>string</code> Length: <code>string &lt;= 255</code> Job reference identifier, e.g. internal job ID jobs[].title <code>string</code> \u2705 Length: <code>string &lt;= 255</code> Title of the job jobs[].description <code>string</code> Length: <code>string &lt;= 1000</code> Description of the job jobs[].jobType <code>string</code> \u2705 <code>permanent</code> <code>contract</code> <code>internship</code> <code>apprenticeship</code> <code>temporary</code> <code>volunteer</code> <code>freelance</code> Type of the job jobs[].experienceLevel <code>string</code> <code>junior</code> <code>mid</code> <code>senior</code> <code>lead</code> <code>manager</code> <code>director</code> <code>executive</code> Experience level required for the job jobs[].workLoad <code>object</code> object Expected workload in percentage for the job jobs[].workLoad.minPercentage <code>number</code> <code>0 &lt;= x &lt;= 100</code> Minimum expected workload in percentage jobs[].workLoad.maxPercentage <code>number</code> <code>0 &lt;= x &lt;= 100</code> Maximum expected workload in percentage jobs[].workType <code>string</code> <code>remote</code> <code>on-site</code> <code>hybrid</code> Type of work for the job jobs[].salary <code>object</code> object Salary range for the job jobs[].salary.min <code>number</code> <code>0 &lt;= x</code> Minimum salary to expect jobs[].salary.max <code>number</code> <code>0 &lt;= x</code> Maximum salary to expect jobs[].salary.currency <code>string</code> Length: <code>3 &lt;= string &lt;= 3</code> Currency as ISO 4217: see https://en.wikipedia.org/wiki/ISO_4217 jobs[].salary.interval <code>string</code> <code>hourly</code> <code>daily</code> <code>weekly</code> <code>monthly</code> <code>yearly</code> Min/max salary interval, e.g. per hour, per month, per year jobs[].tags <code>array</code> Length: <code>string &lt;= 28</code> Key words for the job, e.g. skills, technologies, etc. jobs[].locations <code>array</code> \u2705 object Locations of the job jobs[].locations[].city <code>string</code> string City e.g. San Francisco jobs[].locations[].country <code>string</code> Length: <code>2 &lt;= string &lt;= 2</code> Country code as ISO 3166-1 alpha-2, e.g. US, DE, CH. Also see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 jobs[].url <code>string</code> \u2705 Format: <code>uri</code> URL of the job's full description and application page"},{"location":"implementation/ojobpub-schema/#definitions","title":"Definitions","text":""},{"location":"implementation/ojobpub-schema/#location","title":"location","text":"<p>Location information</p>"},{"location":"implementation/ojobpub-schema/#type-object_1","title":"Type: <code>object</code>","text":"Property Type Required Possible values Deprecated Default Description Examples city <code>string</code> string City e.g. San Francisco country <code>string</code> Length: <code>2 &lt;= string &lt;= 2</code> Country code as ISO 3166-1 alpha-2, e.g. US, DE, CH. Also see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"},{"location":"implementation/ojobpub-schema/#job","title":"job","text":"<p>Job opening information</p>"},{"location":"implementation/ojobpub-schema/#type-object_2","title":"Type: <code>object</code>","text":"<p>\u26a0\ufe0f Additional properties are not allowed.</p> Property Type Required Possible values Deprecated Default Description Examples language <code>string</code> \u2705 Length: <code>2 &lt;= string &lt;= 2</code> Language of the job description as ISO 639-1:2002. See https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes publishedAt <code>string</code> \u2705 Format: <code>date</code> Date when the job was first published title <code>string</code> \u2705 Length: <code>string &lt;= 255</code> Title of the job jobType <code>string</code> \u2705 <code>permanent</code> <code>contract</code> <code>internship</code> <code>apprenticeship</code> <code>temporary</code> <code>volunteer</code> <code>freelance</code> Type of the job locations <code>array</code> \u2705 object Locations of the job locations[].city <code>string</code> string City e.g. San Francisco locations[].country <code>string</code> Length: <code>2 &lt;= string &lt;= 2</code> Country code as ISO 3166-1 alpha-2, e.g. US, DE, CH. Also see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 url <code>string</code> \u2705 Format: <code>uri</code> URL of the job's full description and application page startDate <code>string</code> Format: <code>date</code> Date when the job starts endDate <code>string</code> Format: <code>date</code> Date when the job ends applyBefore <code>string</code> Format: <code>date</code> Date until the job is valid category <code>string</code> Length: <code>string &lt;= 255</code> Category of the job: e.g. Engineering, Marketing, Salesq referenceId <code>string</code> Length: <code>string &lt;= 255</code> Job reference identifier, e.g. internal job ID description <code>string</code> Length: <code>string &lt;= 1000</code> Description of the job experienceLevel <code>string</code> <code>junior</code> <code>mid</code> <code>senior</code> <code>lead</code> <code>manager</code> <code>director</code> <code>executive</code> Experience level required for the job workLoad <code>object</code> object Expected workload in percentage for the job workLoad.minPercentage <code>number</code> <code>0 &lt;= x &lt;= 100</code> Minimum expected workload in percentage workLoad.maxPercentage <code>number</code> <code>0 &lt;= x &lt;= 100</code> Maximum expected workload in percentage workType <code>string</code> <code>remote</code> <code>on-site</code> <code>hybrid</code> Type of work for the job salary <code>object</code> object Salary range for the job salary.min <code>number</code> <code>0 &lt;= x</code> Minimum salary to expect salary.max <code>number</code> <code>0 &lt;= x</code> Maximum salary to expect salary.currency <code>string</code> Length: <code>3 &lt;= string &lt;= 3</code> Currency as ISO 4217: see https://en.wikipedia.org/wiki/ISO_4217 salary.interval <code>string</code> <code>hourly</code> <code>daily</code> <code>weekly</code> <code>monthly</code> <code>yearly</code> Min/max salary interval, e.g. per hour, per month, per year tags <code>array</code> Length: <code>string &lt;= 28</code> Key words for the job, e.g. skills, technologies, etc."},{"location":"implementation/quickstart/","title":"How to publish Job Openings","text":"<p>There are 5 easy steps to revolutionize job publishing.</p>"},{"location":"implementation/quickstart/#1-website","title":"1. Website","text":"<p>You need your own domain and website: e.g. www.example.com.</p> <p>You publish your full description of your job openings in a web page. This can be using a CMS, static site generator or plain HTML, as you like. As a result, your job opening are linkable like: https://www.example.com/career/job-product-manager/.</p>"},{"location":"implementation/quickstart/#2-create-ojobpubjson","title":"2. Create ojobpub.json","text":"<p>Create an ojobpub.json in the path <code>/.well-known/ojobpub.json</code> (all lower case!) in a specific JSON format containing structured meta information about your job openings and link to the full job description on your website. </p> <p>File or Application?</p> <p>While we have used a static ojobpub.json file to demonstrate the simplest way to provide the data, this endpoint is not limited to a static file. It could just as easily be served by a dynamic application or script. An open source tool to help creating a ojobpub.json is currently in development.</p>"},{"location":"implementation/quickstart/#3-validate","title":"3. Validate","text":"<p>To ensure your ojobpub.json's data is valid, we provide a oJobPub JSON schema and a validator app validator.letsemploy.org.</p>"},{"location":"implementation/quickstart/#4-let-us-know","title":"4. Let us know","text":"<p>Go to jobs.letsemploy.org, enter your domain (fqdn) and let us index your jobs!</p> <p>This helps us to see, how things are growing. Once this format is known and etablished, this step may become obsolete (hopefully!). Job crawlers can get all the domains from us for free using our API.</p>"},{"location":"implementation/quickstart/#5-spread-the-word","title":"5. Spread the Word","text":"<p>We would appreciate if you let others know, you publish your job openings using oJobPub by adding a link on your job site:</p> <p></p> <pre><code>&lt;a href=\"https://letsemploy.org\" target=\"_blank\"&gt;\n  &lt;img\n    alt=\"Supports LetsEmploy.org\"\n    src=\"https://img.shields.io/badge/supports-LetsEmploy.org-purple\"\n    /&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"motivation/approach-for-improvement/","title":"Our Approach for Improvement","text":"<p>How we want to address the issues:</p> <ul> <li>Use your Website</li> <li>Structured Meta Data</li> <li>Well-Known Location</li> <li>Keep Control of the Application Process</li> </ul>"},{"location":"motivation/approach-for-improvement/#use-your-website","title":"Use your Website","text":"<p>Having a website is almost a given for a company nowadays, and the cost of a website has never been lower than it is today.</p> <p>We still believe that publishing job vacancies on your own website is the best and most cost-effective solution, as you have full control and the data belongs to you.</p> <p>However, these published vacancies only get found by using search engines, but the experience in finding jobs using Google or any other common search engine is not great. We believe that something is missing. An element that makes it actually work and ensures that your job postings are found by applicants.</p> <p></p>"},{"location":"motivation/approach-for-improvement/#structured-meta-data","title":"Structured Meta Data","text":"<p>Because there's no wide adopted standard format for published job data on websites, job information can vary widely \u2014 from a simple list of jobs to a searchable input field to query jobs to an individual pages for each opening.</p> <p>This lack of consistency and structure makes it difficult for search engines to accurately recognize the context as job openings.</p> <p>While we still want to keep our content on our own website rather than on commercial platforms that sell our data, the challenge is making that content discoverable.</p> <p>A simplistic, minimalistic, structured data file containing meta information about your job opening and a link to your detailed job page should be good enough! Welcome to oJobPub.</p>"},{"location":"motivation/approach-for-improvement/#predefined-path","title":"Predefined Path","text":"<p>Inspired by robots.txt or sitemap.xml, we place a metadata file at a specific, predetermined path, we can ensure that search engines looking for job openings know exactly where to find the data.</p> <p>This means they are aware of the data's context, allowing them to optimize how often they revisit to update their index.</p> <p>As a result, job openings can be indexed by multiple search engines without further efforts and without any additional cost.</p> <p></p>"},{"location":"motivation/approach-for-improvement/#keep-the-control","title":"Keep the Control","text":"<p>The metadata you provide will be stored as an index by search engines, we can't control how long they keep that data.</p> <p>That is why only as much information as necessary is provided. This strategy ensures that there is just enough information to pique a candidate's interest and send them to the employer's website.</p> <p>This is crucial because employers keep control of the application process.</p> <p></p>"},{"location":"motivation/why/","title":"Why: Motivation for Improvement","text":""},{"location":"motivation/why/#costs-and-benefits","title":"Costs and Benefits","text":"<p>Publishing and finding jobs is a huge market. Nowadays there are hundrets or thousands of job portals, job boards and career platforms world wide.</p> <p>An estimated USD 34.4 billion is spent annually (2023) on online job advertisements. These figures come from Staffing Industry Analysts (SIA), a leading analysis firm in the field of human resources management.</p> <p>Needless to say, job portals typically charge employers regardless of whether they fill the position or not.</p> <p>We believe that a publishing job offerings is rediculous expensive, it should be free of charge.</p>"},{"location":"motivation/why/#convenience-and-effort","title":"Convenience and Effort","text":"<p>For employers, advertising a job vacancy means choosing a job portal, creating an account, and providing the job portal with the relevant data.</p> <p>If you want to advertise the same job on another job portal, the effort involved doubles. Why is that? Why can't you just publish the job on our website? The reason is simple: it won't be found.</p> <p>We think, our solution might be the missing piece to make your jobs found on your website.</p> <p>As an employer, we want to advertise our positions in one place, on our own website, and distribute the information.</p>"},{"location":"motivation/why/#efficiency-and-convetion","title":"Efficiency and Convetion","text":"<p>Finding job postings online in the web is unnecessarily difficult due to unstructured data.</p> <p>While there has been some attempts to address this using a job posting schema for jobs, it hasn't been widely adopted and still forces search engines to crawl entire websites just to find the relevant page. This is like searching an entire library for a single page of a book.</p> <p>We propose a much, much simpler approach, inspired by conventions like robots.txt or sitemap.xml. Employers would place all their job listings in a structured file at a single, well-known URL on their web hosting.</p> <p>Job search engines and aggregators would only need to check this single path per domain to get all the data they need. This makes discovering and indexing job postings vastly more efficient for everyone.</p>"}]}